<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="DevTestPlan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">4000</stringProp>
        <stringProp name="ThreadGroup.ramp_time">30</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="TestPlan.comments">aws machine ip: 172.31.10.42</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="server_ip" elementType="Argument">
              <stringProp name="Argument.name">server_ip</stringProp>
              <stringProp name="Argument.value">172.31.10.42</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">aws machine server ip</stringProp>
            </elementProp>
            <elementProp name="results_output" elementType="Argument">
              <stringProp name="Argument.name">results_output</stringProp>
              <stringProp name="Argument.value">./results/linear-interpolation</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">dir to store result files</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="TestPlan.comments">Environment variables</stringProp>
        </Arguments>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Reset Status" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.put(&quot;status&quot;, &quot;&quot;)</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Imputation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;time_series&quot;: [26.68260869565217, 28.10416666666667, 28.3625, 27.27083333333333, 27.97916666666667, 28.116666666666664, 27.85833333333333, 28.391666666666666, 28.77083333333334, 28.058333333333337, 27.48333333333333, 28.61666666666667, 28.883333333333336, 28.17916666666667, null, null, 28.65833333333333, 27.104166666666668, 27.791666666666668, 27.454166666666666, null, 27.941666666666663, 26.745833333333334, 26.67083333333333, 26.55, 25.9875, 27.72916666666666, 28.26666666666667, null, 27.14166666666667, 27.02083333333333, 28.06086956521739, null, 28.837499999999995, 28.129166666666663, null, 26.620833333333337, 27.229166666666668, 27.266666666666666, 28.23333333333333, 28.325000000000003, 28.51666666666667, 28.2375, 27.27916666666667, 27.54583333333333, 27.52916666666667, 28.3625, null, 26.745833333333334, 27.745833333333334, 27.386956521739133, null, 28.254166666666663, 28.33750000000001, 28.28333333333333, 27.308333333333334, 28.02499999999999, 28.00833333333333, 27.712499999999995, 27.44347826086957, 26.354166666666668, 26.362500000000008, 27.02916666666667, 26.6625, 26.104166666666668, 27.20416666666667, 28.216666666666665, 28.470833333333346, 27.804166666666664, 26.629166666666663, 28.32083333333334, null, 27.85, null, 28.129166666666663, 28.2, 27.366666666666664, 27.629166666666663, 27.8125, 28.3625, 28.34583333333333, 27.375000000000004, 27.666666666666675, 27.229166666666668, 27.883333333333336, 28.33043478260869, 27.469565217391303, 27.5625, 28.716666666666665, 28.60833333333333, 28.054166666666674, 28.437500000000004, 28.716666666666665, 28.79583333333333, null, 25.02608695652174, 26.0, 26.18260869565217, 26.445833333333336, 23.573913043478264, 26.716666666666665, 27.118181818181824, 27.69130434782609, 27.94583333333334, 27.45, 28.024999999999995, 28.1125, 28.0375, 27.35, null, 26.75, 27.965000000000003],&#xd;
    &quot;method&quot;: &quot;mode&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server_ip}</stringProp>
          <stringProp name="HTTPSampler.port">5000</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf8</stringProp>
          <stringProp name="HTTPSampler.path">/imputation</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__javaScript(&quot;${status}&quot;!=&quot;finished&quot; &amp;&amp; &quot;${status}&quot;!=&quot;error&quot; &amp;&amp; &quot;${status}&quot;!= &quot;No_Default&quot; &amp;&amp; &quot;${id}&quot;!=&quot;null&quot;)}</stringProp>
        </WhileController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Imputation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server_ip}</stringProp>
            <stringProp name="HTTPSampler.port">5000</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/imputation/${id}?onlyImputed=true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">status</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.status</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
